http://lami.epfl.ch/team/michel/khep-sim/
nachwippen...

formelzeichen & quellcodeverzeichniss
----
GroundPlate ist ein Cylinder mit einem Mesh Collider. Dann fliegen die Roboter nicht weg,
weil die Oberflaeche als rund angesehen wird und die da mitten rein gebeamt werden und all
so ein Mist

Rundenbasiert
Controller kriegt alle Position+Neigungswinkel der Roboter <- Simulation macht broadcast
1 zu 1 oder many C zu 1 R
Studenten programmieren auf jeden Fall Controller
--> überlegen sich selbst wie sie dazwischen Kommunikation machen
--> ?wer welchen Roboter steuert. Wie viele diesen Roboter steuern? oder ?ip whitelist?
auch in dem Roboter (also im sicheren Teil) einen Voter der von den Studenten geschrieben wird -> dieser kann aber auch ausfallen
--> aber nicht der Roboter selber. Wiederbelebung?
--> Protokoll von Voter zu R sehr simpel. Iwie UDP, ein Paket mit Radwinkel L + Radwinkel R, ein anderes für Losfahren und stoppen

Controller übernehmen ist doof, weil unbekanntes Studentenprotokoll. Also zwischen R und Simulation ein override das mit Joystick gesteurt werden kann

Simulation
==========
fälschungssicher
immer Stromverbrauch an den R, höher beim bewegen
Ladestation an der Kante, geht schnell, e-Funktion 10 Takte = voll geladen
Kollision => Minuspunkte
Kein Runterfallen, am Rand kippt Platte
Punktesystem mit ringen, rot->gelb->mitte grün. Tote Roboter geben Minuspunkte. Neigung gibt Minuspunkte

beim anfahren nachwippen in den Neigungssensoren?
 "    "         "        an der Platte?

Controller
=========
berechnet jeder Controller fuer jeden Roboter? Oder nur fuer einen

Fragen
======
Was passiert wenn die Simulation mehrere Bewegungskommandos für den gleichen Roboter kriegt?
Wie viele Roboter mindestens und maximal?
Wie weit rotiert der Roboter denn pro Simulationsschritt?
Fehlermodellprogramm

Fragen zur Doku
===============

Fragen zum Interface
====================
kann nn_poll einen timerfd benutzen?

Blablabla
=========
doxygen parameter wo ich mir Gedanken machen muss:
JAVADOC_AUTOBRIEF
OPTIMIZE_OUTPUT_FOR_C
BUILTIN_STL_SUPPORT
EXTRACT_ALL
_PRIVATE
_STATIC
HIDE_SCOPE_NAMES

http://neyasystems.com/an-engineers-guide-to-unit-testing-cmake-and-boost-unit-tests/
Und evt. google test als module beim CMAKE einbinden? Ist im gtest readme enthalten

Beim voter drauf achten das jeder Controller nur einmal in die Mehrheitswertung einbezogen wird
