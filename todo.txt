Zeitplan
--------
Deadline | Module		|	was
---------+--------------+-----------------------------------------------------------
09-17	 | unity		| roboter designen + lampe + rauch
09-22	 | cont + voter | kommunikation
09-22	 | controller   | main als geruest
         |fehlerinjektor|
		 | unity		| roboter die runterfallen sind raus
		 |				| wenn der roboter ausgewhlt ist darf der nicht anders bewegt werden können
		 |				| mglichkeit geben keinen roboter auszuwählen
		 |				| gewhlten roboter anleuchten
		 |				| Scheißbewegung wieder richtig machen
		 | ecc			| pakete > 255
		 | voter		| alles halt
		 | algo			| vlt noch einen?

fixe ideen
----------
die Daten die empfangen werden, vergleichen mit den selbst berechneten. Falls zu krasser
Fehler (rundungsfehler, mem corruption, ...) -> software rejunivation

momentan les ich immer nur ein packet bei jedem poll() aufruf...

voter
-----
Formalized plurality voting - divide results in partitions, choose  random member from the largest
 partition

median voting

refactoring
-----------
Todo: ECCUDP ausplitten -> mindestens der broadcast socket kann auch gut eine einzelene Klasse sein
	  Packet soll absender erhalten. aehh aber beim senden macht das ja keinen Sinn?

Zusammenhanglose Notizen
------------------------
recv rpidev01
$ nc -ulp 7777 -s 192.168.38.181

send qemudev
$ nc -u 192.168.38.181 7777

broadcast test:
qemudev: nc -ub 192.168.38.255 7777 -s 192.168.38.182
	socat - UDP-DATAGRAM:192.168.38.255:7777,broadcast
rpidev01: nc -ulp 7777 192.168.38.181
