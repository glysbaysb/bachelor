Teil 2:

Der erste Teil endet mit einer Idee. Hier werden jetzt Grundlagen
diskutiert, die aber schon unterstellen, dass das grundsätzliche
Vorgehen klar ist. Dazu gibt es aber noch keinerlei Überlegungen an
diesem Punkt der Arbeit.

13. Erster Satz... wieder Mischung aus Lösung und Grundlagen.

14 Würde ich allgemeiner benennen, habe aber keine spontan gute Idee.

Teil III:

15

Ganz an den Anfang würde ich das Grobbild aus Kapitel 7 stellen und das
dann verfeinern, ehe es an die einzelnen Bauteile geht. Vor allem können
Sie dann schon einmal global sagen, was wie kommuniziert und können
entsprecehnde Entscheidungen begründen. Quasi eine Art "Top-down-Approach".

15.1 Ein Klassendiagramm ist durchaus relevanter Teil des Entwurfs, ich
würde es aber eher nicht bei "Architektur" erwarten... Eventuell
schauen, wie Sie global Ihre Texte in Ansatz/Entwurf -> Architektur ->
Umsetzung gliedern können.

15.2 Würde ich vor alle anderen Subsysteme setzen. Liesse sich auch gut
aus dem eingangs genannten Bild begründen. Ansonsten gefällt mir 15.2
unter "Architektur" viel besser als 15.1

15.3 Ähnlich 15.1

Insgesamt haben Sie hier sehr viele Vorgriffe.

Fehlt zudem nicht noch einiges, z.B. die Ansatzpunkte für die Voter usw.?

16. Was hat das bei "Implementierung" zu suchen? Das ist durchaus
relevant für den Entwurf...

Auch sollte man sagen, dass es hier um das zu simulierende Fehlermodell
geht und nicht um das Fehlermodell Ihres Systems.

16.1 Warum nicht einfach die Badewannenkurve? Nur das early life
abzubilden halte ich nicht für zielführend, denn Ausfälle sind immer
möglich. Ich würde eher so vereinfachen, dass man das early life
weglässt und eine konstante Fehlerrate annimmt (also nur das useful life).

Rest von 16 ist noch nicht fertig, oder?

17 ist okay

18 braucht irgendeine Verknüpfung zu 15.1

19 Teile von 19 hätte ich mir in 15 gewünscht bei der Architektur




Zeitplan
--------
Deadline | Module		|	was
---------+--------------+-----------------------------------------------------------
						| wenn fehlerinjektor an -> kamera bewegt sich nicht?
		 | thesis		| 
		 |				| blender designen
		 |				| rote zone am rand
---------+--------------+----------------


fixe ideen
----------
die Daten die empfangen werden, vergleichen mit den selbst berechneten. Falls zu krasser
Fehler (rundungsfehler, mem corruption, ...) -> software rejunivation

momentan les ich immer nur ein packet bei jedem poll() aufruf...

refactoring
-----------
Todo: ECCUDP ausplitten -> mindestens der broadcast socket kann auch gut eine einzelene Klasse sein
	  Packet soll absender erhalten. aehh aber beim senden macht das ja keinen Sinn?

Zusammenhanglose Notizen
------------------------
recv rpidev01
$ nc -ulp 7777 -s 192.168.38.181

send qemudev
$ nc -u 192.168.38.181 7777

broadcast test:
qemudev: nc -ub 192.168.38.255 7777 -s 192.168.38.182
	socat - UDP-DATAGRAM:192.168.38.255:7777,broadcast
rpidev01: nc -ulp 7777 192.168.38.181
